import org.apache.spark.sql.SparkSession


object submit_creacion_tabla {

  def main(args: Array[String]):Unit =
  {

    println("Iniciando SparkSession ...")

    val spark = SparkSession
      .builder()
      .enableHiveSupport()
      .appName("submit_padron_scala")
      .getOrCreate()

    spark.sql("""create database if not exists %s""".format(args(0)))

    println("Creando tabla de Hive. El primer argumento es la base de datos en la que queremos crearlo," +
      " el segundo el nombre que queremos para la tabla," +
      " el tercero la localizaci√≥n de los datos, el cuarto" +
      " la RegEx con la que queremos tabularlos y el quinto el esquema de los datos.")


    spark.sql("USE %s;".format(args(0)))

    spark.sql("""CREATE external TABLE %s (%s)
                |ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.RegexSerDe'
                |WITH SERDEPROPERTIES ('input.regex'='%s')
                |location '%s';""".stripMargin.format(args(1),args(4),args(3),args(2)))

    println("Como no funcionan las 'tableproperties' en la tabla y los headers no encajan con el formato de" +
      " la RegEx, tenemos que eliminar manualmente la primera fila de la tabla.")

    spark.sql("""CREATE TABLE aux as (SELECT * FROM %s WHERE COD_DISTRITO IS NOT NULL)""".format(args(1)))

    spark.sql("""DROP TABLE IF EXISTS %s""".format(args(1)))

    spark.sql("""ALTER TABLE aux RENAME TO %s""".format(args(1)))

  }

}